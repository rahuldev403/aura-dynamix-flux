@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Aura Dynamics Dark Theme - ROG Inspired */
    --background: 0 0% 4%;
    --foreground: 180 100% 98%;

    --card: 0 0% 6%;
    --card-foreground: 180 100% 98%;

    --popover: 0 0% 6%;
    --popover-foreground: 180 100% 98%;

    /* Electric cyan primary accent */
    --primary: 185 100% 50%;
    --primary-foreground: 0 0% 4%;

    --secondary: 0 0% 12%;
    --secondary-foreground: 180 100% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --accent: 185 100% 50%;
    --accent-foreground: 0 0% 4%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 185 100% 50%;

    --radius: 0.75rem;

    /* Glassmorphism variables */
    --glass-bg: 0 0% 10%;
    --glass-border: 0 0% 20%;
    
    /* Glow effects */
    --glow-primary: 185 100% 50%;
    --glow-intensity: 0.5;
    
    /* Grid pattern */
    --grid-color: 0 0% 12%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', sans-serif;
    overflow-x: hidden;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Orbitron', sans-serif;
    font-weight: 700;
  }
  
  /* Custom cursor */
  body {
    cursor: none;
  }
  
  a, button, [role="button"] {
    cursor: none;
  }
  
  /* Animated grid background with particle effect */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(hsl(var(--grid-color)) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--grid-color)) 1px, transparent 1px);
    background-size: 50px 50px;
    opacity: 0.3;
    z-index: -1;
    animation: gridMove 20s linear infinite;
  }
  
  @keyframes gridMove {
    0% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(50px, 50px);
    }
  }
}

@layer utilities {
  /* Advanced Glassmorphism effect */
  .glass {
    background: hsla(var(--glass-bg), 0.4);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid transparent;
    background-clip: padding-box;
    position: relative;
  }
  
  .glass::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsla(var(--primary), 0.3), transparent 50%, hsla(var(--primary), 0.1));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
  
  .glass-strong {
    background: hsla(var(--glass-bg), 0.6);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid transparent;
    background-clip: padding-box;
    position: relative;
  }
  
  .glass-strong::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsla(var(--primary), 0.5), transparent 50%, hsla(var(--primary), 0.2));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
  
  /* Glow effects */
  .glow {
    box-shadow: 0 0 20px hsla(var(--glow-primary), var(--glow-intensity));
  }
  
  .glow-strong {
    box-shadow: 0 0 30px hsla(var(--glow-primary), 0.8),
                0 0 60px hsla(var(--glow-primary), 0.4);
  }
  
  .text-glow {
    text-shadow: 0 0 20px hsla(var(--glow-primary), 0.8);
  }
  
  /* Gradient text */
  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(185 100% 70%));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  /* 3D tilt effect */
  .tilt-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease-out;
  }
  
  /* Neon glow for graphs */
  .neon-glow {
    filter: drop-shadow(0 0 8px hsla(var(--primary), 0.8)) 
            drop-shadow(0 0 16px hsla(var(--primary), 0.4));
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
